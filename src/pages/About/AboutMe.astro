---
import Me from "../../assets/me.jpeg";
import NCF from "../../assets/ncf.svg";
---

<div class="flex flex-col justify-between portfolio-container">
  <div class="flex flex-row
      justify-between
      items-center
      mb-6">
    <button
      id="prevBtn"
      class="hidden md:flex
         w-14 h-14
         bg-gray-800
         rounded-full
         transition-all
         nav-btn items-center justify-center
         relative
         border-b-6 border-[#101016]
         hover:border-b-0 hover:translate-y-[2px]
         active:border-b-0 active:translate-y-[4px]"
      aria-label="Previous section"
    >
      <svg
        class="w-6 h-6
              text-white"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M15 19l-7-7 7-7"></path>
      </svg>
    </button>

    <div class="flex flex-row
        space-x-2">
      <button
        class="w-3 h-3
          bg-white
          rounded-full
          transition-all
          dot-indicator duration-200"
        data-section="0"></button>
      <button
        class="w-3 h-3
          bg-gray-500
          rounded-full
          transition-all
          dot-indicator duration-200 hover:bg-gray-400"
        data-section="1"></button>
    </div>

    <button
      id="nextBtn"
      class="hidden md:flex
         w-14 h-14
         bg-gray-800
         rounded-full
         transition-all
         nav-btn items-center justify-center
         relative
         border-b-6 border-[#101016]
         hover:border-b-0 hover:translate-y-[2px]
         active:border-b-0 active:translate-y-[4px]"
      aria-label="Next section"
    >
      <svg
        class="w-6 h-6
          text-white"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 5l7 7-7 7"></path>
      </svg>
    </button>
  </div>

  <div class="flex-1 relative touch-pan-x" id="sectionsContainer">
    <div id="section-0" class="portfolio-section active">
      <div class="flex flex-col
          items-center h-full justify-center">
        <div class="bg-amber-700 rounded-full mb-4">
          <img
            class="object-contain
            w-54 h-54
            rounded-2xl"
            src={Me.src}
            alt="Profile picture"
          />
        </div>
        <div class="max-w-2xl
            text-center">
          <p class="mb-1
              leading-[1.6] text-[#fff5ee]">
            Hi, I'm Cyryl, and welcome to my portfolio. As an aspiring backend
            developer, I'm focused on designing and building reliable
            server-side applications. My goal is to write clean, efficient code
            that ensures smooth data flow and system stability.
          </p>
        </div>
      </div>
    </div>

    <!-- Education Section -->
    <div id="section-1" class="portfolio-section">
      <div class="flex flex-col
          items-center h-full justify-center">
        <img
          class="object-cover
            w-full max-w-lg h-64
            rounded-lg mb-4"
          src={NCF.src}
          alt="NCF Logo"
        />
        <div class="text-center">
          <p class="text-white text-start">
            Bachelor of Science in Computer Science
            <br />Naga College Foundation | Naga City, Philippines
            <br />Graduating: July 2024
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .portfolio-container {
    position: relative;
    overflow: hidden;
    touch-action: pan-x;
  }

  .portfolio-section {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    transform: translateX(50px);
    transition: all 0.5s ease-in-out;
    pointer-events: none;
  }

  .portfolio-section.active {
    opacity: 1;
    transform: translateX(0);
    position: relative;
    pointer-events: all;
  }

  .portfolio-section.previous {
    transform: translateX(-50px);
  }

  .dot-indicator.active {
    background-color: white;
  }

  .dot-indicator:not(.active) {
    background-color: rgb(107 114 128);
  }

  .dot-indicator:not(.active):hover {
    background-color: rgb(156 163 175);
  }

  /* Mobile touch improvements */
  @media (max-width: 768px) {
    .nav-btn {
      width: 3rem;
      height: 3rem;
    }

    .nav-btn svg {
      width: 1.25rem;
      height: 1.25rem;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let currentSection = 0;
    const totalSections = 2;
    const sectionTitles = ["About Me", "Education"];

    const prevBtn = document.getElementById("prevBtn");
    const nextBtn = document.getElementById("nextBtn");
    const dotIndicators = document.querySelectorAll(".dot-indicator");
    const sectionIndicator = document.getElementById("sectionIndicator");
    const sections = document.querySelectorAll(".portfolio-section");
    const sectionsContainer = document.getElementById("sectionsContainer");

    let startX = 0;
    let endX = 0;
    let startY = 0;
    let endY = 0;
    let isScrolling = false;

    function showSection(index: number, direction: string = "next") {
      sections.forEach((section, i) => {
        section.classList.remove("active", "previous");
        if (i < index) section.classList.add("previous");
      });

      const currentSectionElement = document.getElementById(`section-${index}`);
      if (currentSectionElement) {
        currentSectionElement.classList.add("active");
      }

      dotIndicators.forEach((dot, i) => {
        if (i === index) {
          dot.classList.add("active");
          dot.classList.remove("bg-gray-500");
          dot.classList.add("bg-white");
        } else {
          dot.classList.remove("active");
          dot.classList.remove("bg-white");
          dot.classList.add("bg-gray-500");
        }
      });

      if (sectionIndicator) {
        sectionIndicator.textContent = `${index + 1} of ${totalSections} - ${sectionTitles[index]}`;
      }
    }

    function goToPrevious() {
      currentSection =
        currentSection > 0 ? currentSection - 1 : totalSections - 1;
      showSection(currentSection, "prev");
    }

    function goToNext() {
      currentSection =
        currentSection < totalSections - 1 ? currentSection + 1 : 0;
      showSection(currentSection, "next");
    }

    function handleTouchStart(e: TouchEvent) {
      startX = e.touches[0].clientX;
      startY = e.touches[0].clientY;
      isScrolling = false;
    }

    function handleTouchMove(e: TouchEvent) {
      if (!startX || !startY) return;
      const currentX = e.touches[0].clientX;
      const currentY = e.touches[0].clientY;
      const diffX = Math.abs(currentX - startX);
      const diffY = Math.abs(currentY - startY);
      if (diffY > diffX) isScrolling = true;
    }

    function handleTouchEnd(e: TouchEvent) {
      if (isScrolling) return;
      endX = e.changedTouches[0].clientX;
      endY = e.changedTouches[0].clientY;
      const diffX = startX - endX;
      const diffY = Math.abs(startY - endY);
      if (Math.abs(diffX) > diffY && Math.abs(diffX) > 50) {
        if (diffX > 0) goToNext();
        else goToPrevious();
      }
      startX = 0;
      endX = 0;
      startY = 0;
      endY = 0;
    }

    prevBtn?.addEventListener("click", goToPrevious);
    nextBtn?.addEventListener("click", goToNext);

    dotIndicators.forEach((dot, index) => {
      dot.addEventListener("click", () => {
        const direction = index > currentSection ? "next" : "prev";
        currentSection = index;
        showSection(currentSection, direction);
      });
    });

    if (sectionsContainer) {
      sectionsContainer.addEventListener("touchstart", handleTouchStart, {
        passive: true,
      });
      sectionsContainer.addEventListener("touchmove", handleTouchMove, {
        passive: true,
      });
      sectionsContainer.addEventListener("touchend", handleTouchEnd, {
        passive: true,
      });
    }

    showSection(0);
  });
</script>
