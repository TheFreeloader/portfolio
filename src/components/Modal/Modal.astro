---
import CloseButton from "../Buttons/CloseButton.astro";
import Card from "../Card/Card.astro";

interface Props {
  cardId: string;
  cardTitle: string;
  cardIcon: string;
  modalOverlayId: string;
  modalContentId: string;
  modalHeaderId: string;
  closeModalId: string;
  cardElementId: string;
  maxWidth?: string;
  maxHeight?: string;
  excludeFromDrag?: string[];
}

const {
  cardId,
  cardTitle,
  cardIcon,
  modalOverlayId,
  modalContentId,
  modalHeaderId,
  closeModalId,
  cardElementId,
  maxWidth = "600px",
  maxHeight = "50vh",
  excludeFromDrag = [],
} = Astro.props;
---

<div>
  <div class="cursor-pointer" id={cardElementId}>
    <Card title={cardTitle} icon={cardIcon} cardId={cardId} />
  </div>

  <div
    class="hidden z-[1000] pointer-events-none fixed [&.visible]:block"
    id={modalOverlayId}
    style="top: 50%; left: 50%; transform: translate(-50%, -50%);"
  >
    <div
      class="overflow-visible w-[90vw] max-w-[400px] min-h-[300px] max-h-[80vh] p-4 font-['Poppins',sans-serif] bg-gray-950 border-gray-500 border rounded-2xl pointer-events-auto relative translate-x-0 translate-y-0 md:overflow-hidden md:min-w-[30vw] md:min-h-[40vh] md:max-h-[60vh] md:p-8 md:border-1 before:content-[''] before:absolute before:-top-[7px] before:-left-[7px] before:-right-[7px] before:-bottom-[7px] before:-z-10 before:bg-transparent before:rounded-lg before:pointer-events-none shadow-2xl shadow-black/50 md:shadow-none"
      id={modalContentId}
      style={`max-width: ${maxWidth}; max-height: ${maxHeight};`}
    >
      <div
        class="z-10 flex w-full h-[50px] px-4 bg-[rgba(0,0,0,0.1)] border-b-2 border-dashed border-[rgba(252,245,229,0.5)] cursor-move transition-colors absolute top-0 left-0 hover:border-b-[rgba(252,245,229,0.8)] duration-200 modal_header items-center justify-center touch-manipulation md:px-0 md:justify-start"
        id={modalHeaderId}
      >
        <div class="w-8 h-1 bg-gray-400 rounded-full opacity-60 md:hidden">
        </div>
      </div>

      <CloseButton id={closeModalId} />

      <div
        class="z-[5] flex flex-col pt-2 p-1 select-none relative -m-[5px] [scrollbar-width:none] [-ms-overflow-style:none] [&::-webkit-scrollbar]:hidden"
        style={`overflow-y: auto; overflow-x: hidden; max-height: calc(${maxHeight} - 70px); margin-top: 50px;`}
      >
        <slot />
      </div>
    </div>
  </div>
</div>

<script
  is:inline
  define:vars={{
    cardId,
    cardElementId,
    modalOverlayId,
    closeModalId,
    modalContentId,
    modalHeaderId,
    excludeFromDrag,
  }}
>
  const configKey = `modalConfig_${cardId}`;
  window[configKey] = {
    cardId,
    cardElementId,
    modalOverlayId,
    closeModalId,
    modalContentId,
    modalHeaderId,
    excludeFromDrag,
  };

  function initThisModal() {
    import("/scripts/modalHandler.client.js")
      .then(() => {
        window.initializeModal(window[configKey]);
      })
      .catch((error) => {
        console.error(`Failed to load modal handler for ${cardId}:`, error);
      });
  }

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initThisModal);
  } else {
    setTimeout(initThisModal, 0);
  }
</script>

<style>
  .dragging {
    user-select: none;
  }
  .modal_svg rect {
    stroke: #362b14;
    stroke-width: 7;
    fill: transparent;
    stroke-dasharray: 778;
    stroke-dashoffset: 0;
  }
  .modal_header {
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.1) 0%,
      rgba(0, 0, 0, 0.05) 100%
    );
    backdrop-filter: blur(10px);
    min-height: 50px;
    border-top-left-radius: 20px;
    border-top-right-radius: 20px;
  }
  [id$="modalOverlay"] {
    margin: 10px;
  }
  [id$="CloseButton"] {
    top: 0.75rem;
    right: 0.75rem;
    width: 2rem;
    height: 2rem;
    z-index: 20;
  }
  @media (min-width: 768px) {
    .modal_header {
      background: rgba(0, 0, 0, 0.1);
      backdrop-filter: none;
    }
    [id$="modalOverlay"] {
      margin: 0;
    }
    [id$="CloseButton"] {
      top: 1rem;
      right: 1rem;
      width: 1.5rem;
      height: 1.5rem;
    }
  }
  .modal-dragging {
    user-select: none;
    transform-origin: center;
    transition: none !important;
  }
  .modal-dragging .modal_header {
    background: rgba(0, 0, 0, 0.2);
    border-color: rgba(252, 245, 229, 1);
  }
  @media (prefers-reduced-motion: no-preference) {
    .modal_header {
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
  }
</style>
